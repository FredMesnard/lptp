
:- assert_clauses(n(arg_seq,3),[
 clause([n(arg_seq,3),[n('.',2),$(x),$(l1)],$(l3),$(ts2)],
  [\/,[&,[=,$(x),[n(close,0)]],[=,$(l3),$(l1)],[=,$(ts2),[n([],0)]]],[&,[~,[=,$(x),[n(close,0)]]],[\/,[&,[=,$(x),[n(comma,0)]],[n(one_arg,3),$(l1),$(l2),$(t)],[n(arg_seq,3),$(l2),$(l3),$(ts1)],[=,$(ts2),[n('.',2),$(t),$(ts1)]]],[&,[~,[=,$(x),[n(comma,0)]]],[=,$(l3),[n(error,1),[n(/,2),[n(arg_seq,0)],[n('.',2),$(x),$(l1)]]]],[=,$(ts2),[n(error,0)]]]]]],
  [x,l1,l3,ts2,l2,t,ts1]/0),
 clause([n(arg_seq,3),[n([],0)],[n(error,1),[n(/,2),[n(arg_seq,0)],[n([],0)]]],[n(error,0)]],
  [&],
  []/0),
 clause([n(arg_seq,3),[n(error,1),$(x)],[n(error,1),$(x)],[n(error,0)]],
  [&],
  [x]/0)
]).

:- assert_clauses(n(error,1),[
 clause([n(error,1),[n(error,1),$(0)]],
  [&],
  [0]/1)
]).

:- assert_clauses(n(expect,3),[
 clause([n(expect,3),[n('.',2),$(y),$(l1)],$(x),$(l2)],
  [\/,[&,[=,$(x),$(y)],[=,$(l2),$(l1)]],[&,[~,[=,$(x),$(y)]],[=,$(l2),[n(error,1),[n(/,2),[n(expect,1),$(x)],[n('.',2),$(y),$(l1)]]]]]],
  [y,l1,x,l2]/0),
 clause([n(expect,3),[n([],0)],$(x),[n(error,1),[n(/,2),[n(expect,1),$(x)],[n([],0)]]]],
  [&],
  [x]/0),
 clause([n(expect,3),[n(error,1),$(x)],$(0),[n(error,1),$(x)]],
  [&],
  [x,0]/1)
]).

:- assert_clauses(n(infix_op,1),[
 clause([n(infix_op,1),$(x)],
  [n(current_op,3),$(0),[n(xfx,0)],$(x)],
  [x,0]/1),
 clause([n(infix_op,1),$(x)],
  [n(current_op,3),$(0),[n(xfy,0)],$(x)],
  [x,0]/1),
 clause([n(infix_op,1),$(x)],
  [n(current_op,3),$(0),[n(yfx,0)],$(x)],
  [x,0]/1)
]).

:- assert_clauses(n(infix_prec,4),[
 clause([n(infix_prec,4),$(x),$(n1),$(n2),$(n2)],
  [&,[n(current_op,3),$(n1),[n(xfx,0)],$(x)],[n(is,2),$(n2),[n(-,2),$(n1),[n(1,0)]]]],
  [x,n1,n2]/0),
 clause([n(infix_prec,4),$(x),$(n1),$(n2),$(n1)],
  [&,[n(current_op,3),$(n1),[n(xfy,0)],$(x)],[n(is,2),$(n2),[n(-,2),$(n1),[n(1,0)]]]],
  [x,n1,n2]/0),
 clause([n(infix_prec,4),$(x),$(n1),$(n1),$(n2)],
  [&,[n(current_op,3),$(n1),[n(yfx,0)],$(x)],[n(is,2),$(n2),[n(-,2),$(n1),[n(1,0)]]]],
  [x,n1,n2]/0)
]).

:- assert_clauses(n(list_tail,3),[
 clause([n(list_tail,3),[n('.',2),$(x),$(l1)],$(l3),$(t3)],
  [\/,[&,[=,$(x),[n(close_list,0)]],[=,$(l3),$(l1)],[=,$(t3),[n(con,1),[n([],0)]]]],[&,[~,[=,$(x),[n(close_list,0)]]],[\/,[&,[=,$(x),[n(comma,0)]],[n(one_arg,3),$(l1),$(l2),$(t1)],[n(list_tail,3),$(l2),$(l3),$(t2)],[=,$(t3),[n(fun,2),[n('.',0)],[n('.',2),$(t1),[n('.',2),$(t2),[n([],0)]]]]]],[&,[~,[=,$(x),[n(comma,0)]]],[\/,[&,[=,$(x),[n(head_tail_sep,0)]],[n(one_arg,3),$(l1),$(l2),$(t3)],[n(expect,3),$(l2),[n(close_list,0)],$(l3)]],[&,[~,[=,$(x),[n(head_tail_sep,0)]]],[=,$(l3),[n(error,1),[n(/,2),[n(tail_begin,0)],[n('.',2),$(x),$(l1)]]]],[=,$(t3),[n(error,0)]]]]]]]],
  [x,l1,l3,t3,l2,t1,t2]/0),
 clause([n(list_tail,3),[n([],0)],[n(error,1),[n(/,2),[n(tail_begin,0)],[n([],0)]]],[n(error,0)]],
  [&],
  []/0),
 clause([n(list_tail,3),[n(error,1),$(x)],[n(error,1),$(x)],[n(error,0)]],
  [&],
  [x]/0)
]).

:- assert_clauses(n(minus_number_tree,2),[
 clause([n(minus_number_tree,2),[n(integer,1),$(x)],[n(integer,1),$(y)]],
  [n(is,2),$(y),[n(-,1),$(x)]],
  [x,y]/0),
 clause([n(minus_number_tree,2),[n(float_number,1),$(x)],[n(float_number,1),$(y)]],
  [n(is,2),$(y),[n(-,1),$(x)]],
  [x,y]/0)
]).

:- assert_clauses(n(more,6),[
 clause([n(more,6),[n('.',2),[n(name,1),$(x)],$(l1)],$(n1),$(n2),$(t1),$(l3),$(t3)],
  [\/,[&,[n(infix_op,1),$(x)],[n(infix_prec,4),$(x),$(n3),$(n4),$(n5)],[\/,[&,[n(=<,2),$(n3),$(n2)],[\/,[&,[n(=<,2),$(n1),$(n4)],[n(term,4),$(l1),$(n5),$(l2),$(t2)],[n(more,6),$(l2),$(n3),$(n2),[n(fun,2),$(x),[n('.',2),$(t1),[n('.',2),$(t2),[n([],0)]]]],$(l3),$(t3)]],[&,[~,[n(=<,2),$(n1),$(n4)]],[=,$(l3),[n(error,1),[n(/,2),[n(more_infix_prec,0)],[n('.',2),[n(name,1),$(x)],$(l1)]]]],[=,$(t3),[n(error,0)]]]]],[&,[~,[n(=<,2),$(n3),$(n2)]],[=,$(l3),[n('.',2),[n(name,1),$(x)],$(l1)]],[=,$(t3),$(t1)]]]],[&,[~,[n(infix_op,1),$(x)]],[\/,[&,[n(postfix_op,1),$(x)],[n(postfix_prec,3),$(x),$(n3),$(n4)],[\/,[&,[n(=<,2),$(n3),$(n2)],[\/,[&,[n(=<,2),$(n1),$(n4)],[n(more,6),$(l1),$(n3),$(n2),[n(fun,2),$(x),[n('.',2),$(t1),[n([],0)]]],$(l3),$(t3)]],[&,[~,[n(=<,2),$(n1),$(n4)]],[=,$(l3),[n(error,1),[n(/,2),[n(more_postfix_prec,0)],[n('.',2),[n(name,1),$(x)],$(l1)]]]],[=,$(t3),[n(error,0)]]]]],[&,[~,[n(=<,2),$(n3),$(n2)]],[=,$(l3),[n('.',2),[n(name,1),$(x)],$(l1)]],[=,$(t3),$(t1)]]]],[&,[~,[n(postfix_op,1),$(x)]],[=,$(l3),[n('.',2),[n(name,1),$(x)],$(l1)]],[=,$(t3),$(t1)]]]]],
  [x,l1,n1,n2,t1,l3,t3,n3,n4,n5,l2,t2]/0),
 clause([n(more,6),[n('.',2),[n(comma,0)],$(l1)],$(n1),$(n2),$(t1),$(l3),$(t3)],
  [\/,[&,[n(=<,2),[n(1000,0)],$(n2)],[\/,[&,[n(=<,2),$(n1),[n(999,0)]],[n(term,4),$(l1),[n(1000,0)],$(l2),$(t2)],[n(more,6),$(l2),[n(1000,0)],$(n2),[n(fun,2),[n(',',0)],[n('.',2),$(t1),[n('.',2),$(t2),[n([],0)]]]],$(l3),$(t3)]],[&,[~,[n(=<,2),$(n1),[n(999,0)]]],[=,$(l3),[n(error,1),[n(/,2),[n(more_comma_as_infix,0)],[n('.',2),[n(comma,0)],$(l1)]]]],[=,$(t3),[n(error,0)]]]]],[&,[~,[n(=<,2),[n(1000,0)],$(n2)]],[=,$(l3),[n('.',2),[n(comma,0)],$(l1)]],[=,$(t3),$(t1)]]],
  [l1,n1,n2,t1,l3,t3,l2,t2]/0),
 clause([n(more,6),$(l),$(0),$(1),$(t),$(l),$(t)],
  [~,[n(more_begin,1),$(l)]],
  [l,0,1,t]/2)
]).

:- assert_clauses(n(more_begin,1),[
 clause([n(more_begin,1),[n('.',2),[n(name,1),$(0)],$(1)]],
  [&],
  [0,1]/2),
 clause([n(more_begin,1),[n('.',2),[n(comma,0)],$(0)]],
  [&],
  [0]/1)
]).

:- assert_clauses(n(name_token,1),[
 clause([n(name_token,1),[n(name,1),$(0)]],
  [&],
  [0]/1)
]).

:- assert_clauses(n(number_token,1),[
 clause([n(number_token,1),[n(integer,1),$(0)]],
  [&],
  [0]/1),
 clause([n(number_token,1),[n(float_number,1),$(0)]],
  [&],
  [0]/1)
]).

:- assert_clauses(n(one_arg,3),[
 clause([n(one_arg,3),[n('.',2),$(x),[n('.',2),$(y),$(l1)]],$(l2),$(t)],
  [\/,[&,[n(name_token,1),$(x)],[n(sep_token,1),$(y)],[=,$(x),[n(name,1),$(z)]],[=,$(l2),[n('.',2),$(y),$(l1)]],[=,$(t),[n(con,1),$(z)]]],[&,[~,[&,[n(name_token,1),$(x)],[n(sep_token,1),$(y)]]],[n(term,4),[n('.',2),$(x),[n('.',2),$(y),$(l1)]],[n(999,0)],$(l2),$(t)]]],
  [x,y,l1,l2,t,z]/0),
 clause([n(one_arg,3),[n('.',2),$(x),[n([],0)]],[n(error,1),[n(/,2),[n(arg,0)],[n('.',2),$(x),[n([],0)]]]],[n(error,0)]],
  [&],
  [x]/0),
 clause([n(one_arg,3),[n([],0)],[n(error,1),[n(/,2),[n(arg,0)],[n([],0)]]],[n(error,0)]],
  [&],
  []/0),
 clause([n(one_arg,3),[n(error,1),$(x)],[n(error,1),$(x)],[n(error,0)]],
  [&],
  [x]/0)
]).

:- assert_clauses(n(parse,2),[
 clause([n(parse,2),$(l),$(t)],
  [&,[n(term,4),$(l),[n(1200,0)],$(l1),$(t1)],[\/,[&,[=,$(l1),[n('.',2),[n(end,0)],[n([],0)]]],[=,$(t),$(t1)]],[&,[~,[=,$(l1),[n('.',2),[n(end,0)],[n([],0)]]]],[\/,[&,[n(error,1),$(l1)],[=,$(t),$(l1)]],[&,[~,[n(error,1),$(l1)]],[=,$(t),[n(error,1),[n(/,2),[n(parse,0)],$(l)]]]]]]]],
  [l,t,l1,t1]/0)
]).

:- assert_clauses(n(postfix_op,1),[
 clause([n(postfix_op,1),$(x)],
  [n(current_op,3),$(0),[n(xf,0)],$(x)],
  [x,0]/1),
 clause([n(postfix_op,1),$(x)],
  [n(current_op,3),$(0),[n(yf,0)],$(x)],
  [x,0]/1)
]).

:- assert_clauses(n(postfix_prec,3),[
 clause([n(postfix_prec,3),$(x),$(n1),$(n2)],
  [&,[n(current_op,3),$(n1),[n(xf,0)],$(x)],[n(is,2),$(n2),[n(-,2),$(n1),[n(1,0)]]]],
  [x,n1,n2]/0),
 clause([n(postfix_prec,3),$(x),$(n),$(n)],
  [n(current_op,3),$(n),[n(yf,0)],$(x)],
  [x,n]/0)
]).

:- assert_clauses(n(prefix_op,1),[
 clause([n(prefix_op,1),$(x)],
  [n(current_op,3),$(0),[n(fx,0)],$(x)],
  [x,0]/1),
 clause([n(prefix_op,1),$(x)],
  [n(current_op,3),$(0),[n(fy,0)],$(x)],
  [x,0]/1)
]).

:- assert_clauses(n(prefix_prec,3),[
 clause([n(prefix_prec,3),$(x),$(n1),$(n2)],
  [&,[n(current_op,3),$(n1),[n(fx,0)],$(x)],[n(is,2),$(n2),[n(-,2),$(n1),[n(1,0)]]]],
  [x,n1,n2]/0),
 clause([n(prefix_prec,3),$(x),$(n),$(n)],
  [n(current_op,3),$(n),[n(fy,0)],$(x)],
  [x,n]/0)
]).

:- assert_clauses(n(sep_token,1),[
 clause([n(sep_token,1),[n(comma,0)]],
  [&],
  []/0),
 clause([n(sep_token,1),[n(close,0)]],
  [&],
  []/0),
 clause([n(sep_token,1),[n(head_tail_sep,0)]],
  [&],
  []/0),
 clause([n(sep_token,1),[n(close_list,0)]],
  [&],
  []/0)
]).

:- assert_clauses(n(symbol_op,1),[
 clause([n(symbol_op,1),$(x)],
  [&,[n(current_op,3),$(0),$(1),$(x)],[~,[=,$(x),[n(',',0)]]]],
  [x,0,1]/2)
]).

:- assert_clauses(n(term,4),[
 clause([n(term,4),[n('.',2),[n(variable,1),$(x)],$(l1)],$(n),$(l2),$(t)],
  [n(more,6),$(l1),[n(0,0)],$(n),[n(variable,1),$(x)],$(l2),$(t)],
  [x,l1,n,l2,t]/0),
 clause([n(term,4),[n('.',2),[n(integer,1),$(x)],$(l1)],$(n),$(l2),$(t)],
  [n(more,6),$(l1),[n(0,0)],$(n),[n(integer,1),$(x)],$(l2),$(t)],
  [x,l1,n,l2,t]/0),
 clause([n(term,4),[n('.',2),[n(float_number,1),$(x)],$(l1)],$(n),$(l2),$(t)],
  [n(more,6),$(l1),[n(0,0)],$(n),[n(float_number,1),$(x)],$(l2),$(t)],
  [x,l1,n,l2,t]/0),
 clause([n(term,4),[n('.',2),[n(char_code_list,1),$(x)],$(l1)],$(n),$(l2),$(t)],
  [n(more,6),$(l1),[n(0,0)],$(n),[n(char_code_list,1),$(x)],$(l2),$(t)],
  [x,l1,n,l2,t]/0),
 clause([n(term,4),[n('.',2),[n(name,1),$(x)],[n('.',2),$(y),$(l1)]],$(n1),$(l4),$(t2)],
  [\/,[&,[=,$(y),[n(open,1),[n(nolayout,0)]]],[n(one_arg,3),$(l1),$(l2),$(t1)],[n(arg_seq,3),$(l2),$(l3),$(ts)],[n(more,6),$(l3),[n(0,0)],$(n1),[n(fun,2),$(x),[n('.',2),$(t1),$(ts)]],$(l4),$(t2)]],[&,[~,[=,$(y),[n(open,1),[n(nolayout,0)]]]],[\/,[&,[n(prefix_op,1),$(x)],[\/,[&,[=,$(x),[n(-,0)]],[n(number_token,1),$(y)],[n(minus_number_tree,2),$(y),$(t1)],[n(more,6),$(l1),[n(0,0)],$(n1),$(t1),$(l4),$(t2)]],[&,[~,[&,[=,$(x),[n(-,0)]],[n(number_token,1),$(y)]]],[n(prefix_prec,3),$(x),$(n2),$(n3)],[\/,[&,[n(=<,2),$(n2),$(n1)],[n(term,4),[n('.',2),$(y),$(l1)],$(n3),$(l2),$(t1)],[n(more,6),$(l2),$(n2),$(n1),[n(fun,2),$(x),[n('.',2),$(t1),[n([],0)]]],$(l4),$(t2)]],[&,[~,[n(=<,2),$(n2),$(n1)]],[=,$(l4),[n(error,1),[n(/,2),[n(prefix_prec,0)],[n('.',2),[n(name,1),$(x)],[n('.',2),$(y),$(l1)]]]]],[=,$(t2),[n(error,0)]]]]]]],[&,[~,[n(prefix_op,1),$(x)]],[\/,[&,[n(symbol_op,1),$(x)],[=,$(l4),[n(error,1),[n(/,2),[n(operator,0)],[n('.',2),[n(name,1),$(x)],[n('.',2),$(y),$(l1)]]]]],[=,$(t2),[n(error,0)]]],[&,[~,[n(symbol_op,1),$(x)]],[n(more,6),[n('.',2),$(y),$(l1)],[n(0,0)],$(n1),[n(con,1),$(x)],$(l4),$(t2)]]]]]]],
  [x,y,l1,n1,l4,t2,l2,t1,l3,ts,n2,n3]/0),
 clause([n(term,4),[n('.',2),[n(open_list,0)],[n('.',2),$(y),$(l1)]],$(n),$(l4),$(t3)],
  [\/,[&,[=,$(y),[n(close_list,0)]],[n(more,6),$(l1),[n(0,0)],$(n),[n(con,1),[n([],0)]],$(l4),$(t3)]],[&,[~,[=,$(y),[n(close_list,0)]]],[n(one_arg,3),[n('.',2),$(y),$(l1)],$(l2),$(t1)],[n(list_tail,3),$(l2),$(l3),$(t2)],[n(more,6),$(l3),[n(0,0)],$(n),[n(fun,2),[n('.',0)],[n('.',2),$(t1),[n('.',2),$(t2),[n([],0)]]]],$(l4),$(t3)]]],
  [y,l1,n,l4,t3,l2,t1,l3,t2]/0),
 clause([n(term,4),[n('.',2),[n(open,1),$(0)],[n('.',2),$(x),[n('.',2),$(y),$(l1)]]],$(n),$(l4),$(t2)],
  [\/,[&,[n(name_token,1),$(x)],[=,$(y),[n(close,0)]],[=,$(x),[n(name,1),$(z)]],[n(more,6),$(l1),[n(0,0)],$(n),[n(con,1),$(z)],$(l4),$(t2)]],[&,[~,[&,[n(name_token,1),$(x)],[=,$(y),[n(close,0)]]]],[n(term,4),[n('.',2),$(x),[n('.',2),$(y),$(l1)]],[n(1200,0)],$(l2),$(t1)],[n(expect,3),$(l2),[n(close,0)],$(l3)],[n(more,6),$(l3),[n(0,0)],$(n),$(t1),$(l4),$(t2)]]],
  [0,x,y,l1,n,l4,t2,z,l2,t1,l3]/1),
 clause([n(term,4),[n('.',2),[n(open_curly,0)],[n('.',2),$(y),$(l1)]],$(n),$(l4),$(t2)],
  [\/,[&,[=,$(y),[n(close_curly,0)]],[n(more,6),$(l1),[n(0,0)],$(n),[n(con,1),[n({},0)]],$(l4),$(t2)]],[&,[~,[=,$(y),[n(close_curly,0)]]],[n(term,4),[n('.',2),$(y),$(l1)],[n(1200,0)],$(l2),$(t1)],[n(expect,3),$(l2),[n(close_curly,0)],$(l3)],[n(more,6),$(l3),[n(0,0)],$(n),[n(fun,2),[n({},0)],[n('.',2),$(t1),[n([],0)]]],$(l4),$(t2)]]],
  [y,l1,n,l4,t2,l2,t1,l3]/0),
 clause([n(term,4),[n(error,1),$(x)],$(0),[n(error,1),$(x)],[n(error,0)]],
  [&],
  [x,0]/1),
 clause([n(term,4),$(l),$(0),[n(error,1),[n(/,2),[n(term_begin,0)],$(l)]],[n(error,0)]],
  [~,[n(term_begin,1),$(l)]],
  [l,0]/1)
]).

:- assert_clauses(n(term_begin,1),[
 clause([n(term_begin,1),[n('.',2),[n(variable,1),$(0)],$(1)]],
  [&],
  [0,1]/2),
 clause([n(term_begin,1),[n('.',2),[n(integer,1),$(0)],$(1)]],
  [&],
  [0,1]/2),
 clause([n(term_begin,1),[n('.',2),[n(float_number,1),$(0)],$(1)]],
  [&],
  [0,1]/2),
 clause([n(term_begin,1),[n('.',2),[n(char_code_list,1),$(0)],$(1)]],
  [&],
  [0,1]/2),
 clause([n(term_begin,1),[n('.',2),[n(name,1),$(0)],[n('.',2),$(1),$(2)]]],
  [&],
  [0,1,2]/3),
 clause([n(term_begin,1),[n('.',2),[n(open,1),$(0)],[n('.',2),$(1),[n('.',2),$(2),$(3)]]]],
  [&],
  [0,1,2,3]/4),
 clause([n(term_begin,1),[n('.',2),[n(open_list,0)],[n('.',2),$(0),$(1)]]],
  [&],
  [0,1]/2),
 clause([n(term_begin,1),[n('.',2),[n(open_curly,0)],[n('.',2),$(0),$(1)]]],
  [&],
  [0,1]/2),
 clause([n(term_begin,1),[n(error,1),$(0)]],
  [&],
  [0]/1)
]).

:- assert_fact(lemma,nat:termination,@(all,[x],[=>,[succeeds,[n(nat,1),$(x)]],[terminates,[n(nat,1),$(x)]]])).
:- assert_fact(lemma,nat:ground,@(all,[x],[=>,[succeeds,[n(nat,1),$(x)]],[gr,$(x)]])).
:- assert_fact(lemma,plus:termination:1,@(all,[x,y,z],[=>,[succeeds,[n(nat,1),$(x)]],[terminates,[n(plus,3),$(x),$(y),$(z)]]])).
:- assert_fact(lemma,plus:termination:2,@(all,[x,y,z],[=>,[succeeds,[n(nat,1),$(z)]],[terminates,[n(plus,3),$(x),$(y),$(z)]]])).
:- assert_fact(lemma,plus:types:1,@(all,[x,y,z],[=>,[succeeds,[n(plus,3),$(x),$(y),$(z)]],[succeeds,[n(nat,1),$(x)]]])).
:- assert_fact(lemma,plus:types:2,@(all,[x,y,z],[=>,[&,[succeeds,[n(plus,3),$(x),$(y),$(z)]],[succeeds,[n(nat,1),$(y)]]],[succeeds,[n(nat,1),$(z)]]])).
:- assert_fact(lemma,plus:types:3,@(all,[x,y,z],[=>,[&,[succeeds,[n(plus,3),$(x),$(y),$(z)]],[succeeds,[n(nat,1),$(z)]]],[succeeds,[n(nat,1),$(y)]]])).
:- assert_fact(lemma,plus:termination:3,@(all,[x,y,z],[=>,[succeeds,[n(plus,3),$(x),$(y),$(z)]],[terminates,[n(plus,3),$(x),$(y),$(z)]]])).
:- assert_fact(lemma,plus:ground:1,@(all,[x,y,z],[=>,[succeeds,[n(plus,3),$(x),$(y),$(z)]],[gr,$(x)]])).
:- assert_fact(lemma,plus:ground:2,@(all,[x,y,z],[=>,[&,[succeeds,[n(plus,3),$(x),$(y),$(z)]],[gr,$(y)]],[gr,$(z)]])).
:- assert_fact(lemma,plus:ground:3,@(all,[x,y,z],[=>,[&,[succeeds,[n(plus,3),$(x),$(y),$(z)]],[gr,$(z)]],[gr,$(y)]])).
:- assert_fact(lemma,plus:existence,@(all,[x,y],[=>,[succeeds,[n(nat,1),$(x)]],@(ex,[z],[succeeds,[n(plus,3),$(x),$(y),$(z)]])])).
:- assert_fact(lemma,plus:uniqueness,@(all,[x,y,z1,z2],[=>,[&,[succeeds,[n(plus,3),$(x),$(y),$(z1)]],[succeeds,[n(plus,3),$(x),$(y),$(z2)]]],[=,$(z1),$(z2)]])).
:- assert_fun([f(@+,2),$(x),$(y)],[succeeds,[n(nat,1),$(x)]],@(ex,[z],[succeeds,[n(plus,3),$(x),$(y),$(z)]])).
:- assert_fact(corollary,plus:zero,@(all,[y],[=,[f(@+,2),[n(0,0)],$(y)],$(y)])).
:- assert_fact(corollary,plus:successor,@(all,[x,y],[=>,[succeeds,[n(nat,1),$(x)]],[=,[f(@+,2),[n(s,1),$(x)],$(y)],[n(s,1),[f(@+,2),$(x),$(y)]]]])).
:- assert_fact(corollary,plus:types,@(all,[x,y],[=>,[&,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(nat,1),$(y)]]],[succeeds,[n(nat,1),[f(@+,2),$(x),$(y)]]]])).
:- assert_fact(theorem,plus:associative,@(all,[x,y,z],[=>,[&,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(nat,1),$(y)]],[succeeds,[n(nat,1),$(z)]]],[=,[f(@+,2),[f(@+,2),$(x),$(y)],$(z)],[f(@+,2),$(x),[f(@+,2),$(y),$(z)]]]])).
:- assert_fact(lemma,plus:zero,@(all,[x],[=>,[succeeds,[n(nat,1),$(x)]],[=,[f(@+,2),$(x),[n(0,0)]],$(x)]])).
:- assert_fact(lemma,plus:successor,@(all,[x,y],[=>,[&,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(nat,1),$(y)]]],[=,[f(@+,2),$(x),[n(s,1),$(y)]],[f(@+,2),[n(s,1),$(x)],$(y)]]])).
:- assert_fact(theorem,plus:commutative,@(all,[x,y],[=>,[&,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(nat,1),$(y)]]],[=,[f(@+,2),$(x),$(y)],[f(@+,2),$(y),$(x)]]])).
:- assert_fact(lemma,plus:injective:second,@(all,[x,y,z],[=>,[&,[succeeds,[n(nat,1),$(x)]],[=,[f(@+,2),$(x),$(y)],[f(@+,2),$(x),$(z)]]],[=,$(y),$(z)]])).
:- assert_fact(lemma,times:types:1,@(all,[x,y,z],[=>,[succeeds,[n(times,3),$(x),$(y),$(z)]],[succeeds,[n(nat,1),$(x)]]])).
:- assert_fact(lemma,times:types:2,@(all,[x,y,z],[=>,[&,[succeeds,[n(times,3),$(x),$(y),$(z)]],[succeeds,[n(nat,1),$(y)]]],[succeeds,[n(nat,1),$(z)]]])).
:- assert_fact(lemma,times:ground:1,@(all,[x,y,z],[=>,[succeeds,[n(times,3),$(x),$(y),$(z)]],[gr,$(x)]])).
:- assert_fact(lemma,times:ground:2,@(all,[x,y,z],[=>,[&,[succeeds,[n(times,3),$(x),$(y),$(z)]],[gr,$(y)]],[gr,$(z)]])).
:- assert_fact(lemma,times:termination,@(all,[x,y,z],[=>,[&,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(nat,1),$(y)]]],[terminates,[n(times,3),$(x),$(y),$(z)]]])).
:- assert_fact(lemma,times:existence,@(all,[x,y],[=>,[&,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(nat,1),$(y)]]],@(ex,[z],[succeeds,[n(times,3),$(x),$(y),$(z)]])])).
:- assert_fact(lemma,times:uniqueness,@(all,[x,y,z1,z2],[=>,[&,[succeeds,[n(times,3),$(x),$(y),$(z1)]],[succeeds,[n(times,3),$(x),$(y),$(z2)]]],[=,$(z1),$(z2)]])).
:- assert_fun([f(@*,2),$(x),$(y)],[&,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(nat,1),$(y)]]],@(ex,[z],[succeeds,[n(times,3),$(x),$(y),$(z)]])).
:- assert_fact(corollary,times:zero,@(all,[y],[=>,[succeeds,[n(nat,1),$(y)]],[=,[f(@*,2),[n(0,0)],$(y)],[n(0,0)]]])).
:- assert_fact(corollary,times:successor,@(all,[x,y],[=>,[&,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(nat,1),$(y)]]],[=,[f(@*,2),[n(s,1),$(x)],$(y)],[f(@+,2),$(y),[f(@*,2),$(x),$(y)]]]])).
:- assert_fact(corollary,times:types,@(all,[x,y],[=>,[&,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(nat,1),$(y)]]],[succeeds,[n(nat,1),[f(@*,2),$(x),$(y)]]]])).
:- assert_fact(theorem,plus:times:distributive,@(all,[x,y,z],[=>,[&,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(nat,1),$(y)]],[succeeds,[n(nat,1),$(z)]]],[=,[f(@*,2),[f(@+,2),$(x),$(y)],$(z)],[f(@+,2),[f(@*,2),$(x),$(z)],[f(@*,2),$(y),$(z)]]]])).
:- assert_fact(theorem,times:associative,@(all,[x,y,z],[=>,[&,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(nat,1),$(y)]],[succeeds,[n(nat,1),$(z)]]],[=,[f(@*,2),[f(@*,2),$(x),$(y)],$(z)],[f(@*,2),$(x),[f(@*,2),$(y),$(z)]]]])).
:- assert_fact(lemma,times:zero,@(all,[x],[=>,[succeeds,[n(nat,1),$(x)]],[=,[f(@*,2),$(x),[n(0,0)]],[n(0,0)]]])).
:- assert_fact(lemma,times:successor,@(all,[y,x],[=>,[&,[succeeds,[n(nat,1),$(y)]],[succeeds,[n(nat,1),$(x)]]],[=,[f(@+,2),[f(@*,2),$(y),$(x)],$(y)],[f(@*,2),$(y),[n(s,1),$(x)]]]])).
:- assert_fact(theorem,times:commutative,@(all,[x,y],[=>,[&,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(nat,1),$(y)]]],[=,[f(@*,2),$(x),$(y)],[f(@*,2),$(y),$(x)]]])).
:- assert_fact(lemma,times:one,@(all,[x],[=>,[succeeds,[n(nat,1),$(x)]],[=,[f(@*,2),[n(s,1),[n(0,0)]],$(x)],$(x)]])).
:- assert_fact(corollary,times:one,@(all,[x],[=>,[succeeds,[n(nat,1),$(x)]],[=,[f(@*,2),$(x),[n(s,1),[n(0,0)]]],$(x)]])).
:- assert_fact(corollary,plus:times:distributive,@(all,[x,y,z],[=>,[&,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(nat,1),$(y)]],[succeeds,[n(nat,1),$(z)]]],[=,[f(@*,2),$(z),[f(@+,2),$(x),$(y)]],[f(@+,2),[f(@*,2),$(z),$(x)],[f(@*,2),$(z),$(y)]]]])).
:- assert_fact(lemma,less:termination:1,@(all,[x,y],[=>,[succeeds,[n(nat,1),$(x)]],[terminates,[n(@<,2),$(x),$(y)]]])).
:- assert_fact(lemma,less:termination:2,@(all,[x,y],[=>,[succeeds,[n(nat,1),$(y)]],[terminates,[n(@<,2),$(x),$(y)]]])).
:- assert_fact(lemma,less:types,@(all,[x,y],[=>,[succeeds,[n(@<,2),$(x),$(y)]],[succeeds,[n(nat,1),$(x)]]])).
:- assert_fact(lemma,less:successor,@(all,[x,y],[=>,[succeeds,[n(@<,2),$(x),$(y)]],@(ex,[z],[=,$(y),[n(s,1),$(z)]])])).
:- assert_fact(lemma,less:transitive:successor,@(all,[x,y,z],[=>,[&,[succeeds,[n(@<,2),$(x),$(y)]],[succeeds,[n(@<,2),$(y),[n(s,1),$(z)]]]],[succeeds,[n(@<,2),$(x),$(z)]]])).
:- assert_fact(lemma,less:weakening,@(all,[x,y],[=>,[succeeds,[n(@<,2),$(x),$(y)]],[succeeds,[n(@<,2),$(x),[n(s,1),$(y)]]]])).
:- assert_fact(theorem,less:transitive,@(all,[x,y,z],[=>,[&,[succeeds,[n(@<,2),$(x),$(y)]],[succeeds,[n(@<,2),$(y),$(z)]]],[succeeds,[n(@<,2),$(x),$(z)]]])).
:- assert_fact(lemma,less:failure,@(all,[x],[=>,[succeeds,[n(nat,1),$(x)]],[fails,[n(@<,2),$(x),$(x)]]])).
:- assert_fact(theorem,less:strictness,@(all,[x],[=>,[succeeds,[n(nat,1),$(x)]],[~,[succeeds,[n(@<,2),$(x),$(x)]]]])).
:- assert_fact(lemma,less:one,@(all,[x],[=>,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(@<,2),$(x),[n(s,1),$(x)]]]])).
:- assert_fact(lemma,less:axiom:successor,@(all,[x,y],[=>,[&,[succeeds,[n(nat,1),$(y)]],[succeeds,[n(@<,2),$(x),[n(s,1),$(y)]]]],[\/,[succeeds,[n(@<,2),$(x),$(y)]],[=,$(x),$(y)]]])).
:- assert_fact(theorem,less:totality,@(all,[x,y],[=>,[&,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(nat,1),$(y)]]],[\/,[succeeds,[n(@<,2),$(x),$(y)]],[=,$(x),$(y)],[succeeds,[n(@<,2),$(y),$(x)]]]])).
:- assert_fact(lemma,less:different:zero,@(all,[x],[=>,[&,[succeeds,[n(nat,1),$(x)]],[<>,$(x),[n(0,0)]]],[succeeds,[n(@<,2),[n(0,0)],$(x)]]])).
:- assert_fact(lemma,leq:termination:1,@(all,[x,y],[=>,[succeeds,[n(nat,1),$(x)]],[terminates,[n(@=<,2),$(x),$(y)]]])).
:- assert_fact(lemma,leq:termination:2,@(all,[x,y],[=>,[succeeds,[n(nat,1),$(y)]],[terminates,[n(@=<,2),$(x),$(y)]]])).
:- assert_fact(lemma,leq:types,@(all,[x,y],[=>,[succeeds,[n(@=<,2),$(x),$(y)]],[succeeds,[n(nat,1),$(x)]]])).
:- assert_fact(lemma,leq:plus,@(all,[x,y],[=>,[succeeds,[n(@=<,2),$(x),$(y)]],@(ex,[z],[succeeds,[n(plus,3),$(x),$(z),$(y)]])])).
:- assert_fact(corollary,leq:plus,@(all,[x,y],[=>,[succeeds,[n(@=<,2),$(x),$(y)]],@(ex,[z],[=,[f(@+,2),$(x),$(z)],$(y)])])).
:- assert_fact(lemma,less:plus,@(all,[x,y],[=>,[succeeds,[n(@<,2),$(x),$(y)]],@(ex,[z],[succeeds,[n(plus,3),$(x),[n(s,1),$(z)],$(y)]])])).
:- assert_fact(corollary,less:plus,@(all,[x,y],[=>,[succeeds,[n(@<,2),$(x),$(y)]],@(ex,[z],[=,[f(@+,2),$(x),[n(s,1),$(z)]],$(y)])])).
:- assert_fact(lemma,less:leq,@(all,[x,y],[=>,[succeeds,[n(@<,2),$(x),$(y)]],[succeeds,[n(@=<,2),$(x),$(y)]]])).
:- assert_fact(theorem,leq:reflexive,@(all,[x],[=>,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(@=<,2),$(x),$(x)]]])).
:- assert_fact(theorem,leq:totality,@(all,[x,y],[=>,[&,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(nat,1),$(y)]]],[\/,[succeeds,[n(@=<,2),$(x),$(y)]],[succeeds,[n(@=<,2),$(y),$(x)]]]])).
:- assert_fact(corollary,less:leq:total,@(all,[x,y],[=>,[&,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(nat,1),$(y)]]],[\/,[succeeds,[n(@<,2),$(x),$(y)]],[succeeds,[n(@=<,2),$(y),$(x)]]]])).
:- assert_fact(corollary,leq:failure,@(all,[x,y],[=>,[&,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(nat,1),$(y)]],[fails,[n(@=<,2),$(x),$(y)]]],[succeeds,[n(@=<,2),$(y),$(x)]]])).
:- assert_fact(lemma,leq:less,@(all,[x,y],[=>,[&,[succeeds,[n(@=<,2),$(x),$(y)]],[succeeds,[n(nat,1),$(y)]]],[\/,[succeeds,[n(@<,2),$(x),$(y)]],[=,$(x),$(y)]]])).
:- assert_fact(theorem,leq:less:transitive,@(all,[x,y,z],[=>,[&,[succeeds,[n(@=<,2),$(x),$(y)]],[succeeds,[n(@<,2),$(y),$(z)]]],[succeeds,[n(@<,2),$(x),$(z)]]])).
:- assert_fact(theorem,less:leq:transitive,@(all,[x,y,z],[=>,[&,[succeeds,[n(@<,2),$(x),$(y)]],[succeeds,[n(@=<,2),$(y),$(z)]]],[succeeds,[n(@<,2),$(x),$(z)]]])).
:- assert_fact(theorem,leq:transitive,@(all,[x,y,z],[=>,[&,[succeeds,[n(@=<,2),$(x),$(y)]],[succeeds,[n(@=<,2),$(y),$(z)]]],[succeeds,[n(@=<,2),$(x),$(z)]]])).
:- assert_fact(theorem,leq:antisymmetric,@(all,[x,y],[=>,[&,[succeeds,[n(@=<,2),$(x),$(y)]],[succeeds,[n(@=<,2),$(y),$(x)]]],[=,$(x),$(y)]])).
:- assert_fact(lemma,leq:one:success,@(all,[x],[=>,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(@=<,2),$(x),[n(s,1),$(x)]]]])).
:- assert_fact(lemma,leq:one:failure,@(all,[x],[=>,[succeeds,[n(nat,1),$(x)]],[fails,[n(@=<,2),[n(s,1),$(x)],$(x)]]])).
:- assert_fact(lemma,less:plus:second,@(all,[x,y,z],[=>,[&,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(@<,2),$(y),$(z)]]],[succeeds,[n(@<,2),[f(@+,2),$(x),$(y)],[f(@+,2),$(x),$(z)]]]])).
:- assert_fact(corollary,less:plus:second,@(all,[x,y],[=>,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(@<,2),$(x),[f(@+,2),$(x),[n(s,1),$(y)]]]]])).
:- assert_fact(lemma,less:plus:first,@(all,[x,y,z],[=>,[&,[succeeds,[n(@<,2),$(x),$(y)]],[succeeds,[n(nat,1),$(y)]],[succeeds,[n(nat,1),$(z)]]],[succeeds,[n(@<,2),[f(@+,2),$(x),$(z)],[f(@+,2),$(y),$(z)]]]])).
:- assert_fact(corollary,less:plus:first,@(all,[x,y],[=>,[&,[succeeds,[n(@<,2),[n(0,0)],$(y)]],[succeeds,[n(nat,1),$(x)]],[succeeds,[n(nat,1),$(y)]]],[succeeds,[n(@<,2),$(x),[f(@+,2),$(y),$(x)]]]])).
:- assert_fact(lemma,leq:plus:second,@(all,[x,y,z],[=>,[&,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(@=<,2),$(y),$(z)]]],[succeeds,[n(@=<,2),[f(@+,2),$(x),$(y)],[f(@+,2),$(x),$(z)]]]])).
:- assert_fact(lemma,leq:plus:first,@(all,[x,y,z],[=>,[&,[succeeds,[n(@=<,2),$(x),$(y)]],[succeeds,[n(nat,1),$(y)]],[succeeds,[n(nat,1),$(z)]]],[succeeds,[n(@=<,2),[f(@+,2),$(x),$(z)],[f(@+,2),$(y),$(z)]]]])).
:- assert_fact(corollary,leq:plus:first,@(all,[x,y],[=>,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(@=<,2),$(x),[f(@+,2),$(x),$(y)]]]])).
:- assert_fact(corollary,leq:plus:second,@(all,[x,y],[=>,[&,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(nat,1),$(y)]]],[succeeds,[n(@=<,2),$(y),[f(@+,2),$(x),$(y)]]]])).
:- assert_fact(lemma,less:plus:inverse,@(all,[x,y,z],[=>,[&,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(@<,2),[f(@+,2),$(x),$(y)],[f(@+,2),$(x),$(z)]]]],[succeeds,[n(@<,2),$(y),$(z)]]])).
:- assert_fact(corollary,less:plus:inverse,@(all,[x,y,z],[=>,[&,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(nat,1),$(y)]],[succeeds,[n(nat,1),$(z)]],[succeeds,[n(@<,2),[f(@+,2),$(x),$(z)],[f(@+,2),$(y),$(z)]]]],[succeeds,[n(@<,2),$(x),$(y)]]])).
:- assert_fact(lemma,leq:plus:inverse,@(all,[x,y,z],[=>,[&,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(@=<,2),[f(@+,2),$(x),$(y)],[f(@+,2),$(x),$(z)]]]],[succeeds,[n(@=<,2),$(y),$(z)]]])).
:- assert_fact(lemma,plus:leq:leq,@(all,[x1,x2,y1,y2],[=>,[&,[succeeds,[n(@=<,2),$(x1),$(y1)]],[succeeds,[n(@=<,2),$(x2),$(y2)]],[succeeds,[n(nat,1),$(y1)]]],[succeeds,[n(@=<,2),[f(@+,2),$(x1),$(x2)],[f(@+,2),$(y1),$(y2)]]]])).
:- assert_fact(lemma,plus:less:leq,@(all,[x1,x2,y1,y2],[=>,[&,[succeeds,[n(@<,2),$(x1),$(y1)]],[succeeds,[n(@=<,2),$(x2),$(y2)]],[succeeds,[n(nat,1),$(y1)]]],[succeeds,[n(@<,2),[f(@+,2),$(x1),$(x2)],[f(@+,2),$(y1),$(y2)]]]])).
:- assert_fact(lemma,plus:leq:less,@(all,[x1,x2,y1,y2],[=>,[&,[succeeds,[n(@=<,2),$(x1),$(y1)]],[succeeds,[n(@<,2),$(x2),$(y2)]],[succeeds,[n(nat,1),$(y1)]]],[succeeds,[n(@<,2),[f(@+,2),$(x1),$(x2)],[f(@+,2),$(y1),$(y2)]]]])).
:- assert_fact(lemma,plus:less:less,@(all,[x1,x2,y1,y2],[=>,[&,[succeeds,[n(@<,2),$(x1),$(y1)]],[succeeds,[n(@<,2),$(x2),$(y2)]],[succeeds,[n(nat,1),$(y1)]]],[succeeds,[n(@<,2),[f(@+,2),$(x1),$(x2)],[f(@+,2),$(y1),$(y2)]]]])).
:- assert_fact(lemma,times:leq:second,@(all,[x,y,z],[=>,[&,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(@=<,2),$(y),$(z)]],[succeeds,[n(nat,1),$(z)]]],[succeeds,[n(@=<,2),[f(@*,2),$(x),$(y)],[f(@*,2),$(x),$(z)]]]])).
:- assert_fact(corollary,times:leq:first,@(all,[x,y,z],[=>,[&,[succeeds,[n(@=<,2),$(x),$(y)]],[succeeds,[n(nat,1),$(y)]],[succeeds,[n(nat,1),$(z)]]],[succeeds,[n(@=<,2),[f(@*,2),$(x),$(z)],[f(@*,2),$(y),$(z)]]]])).
:- assert_fact(lemma,times:less:second,@(all,[x,y,z],[=>,[&,[succeeds,[n(nat,1),$(x)]],[<>,$(x),[n(0,0)]],[succeeds,[n(@<,2),$(y),$(z)]],[succeeds,[n(nat,1),$(z)]]],[succeeds,[n(@<,2),[f(@*,2),$(x),$(y)],[f(@*,2),$(x),$(z)]]]])).
:- assert_fact(lemma,leq:times:inverse,@(all,[x,y,z],[=>,[&,[succeeds,[n(nat,1),$(x)]],[succeeds,[n(nat,1),$(y)]],[succeeds,[n(nat,1),$(z)]],[succeeds,[n(@=<,2),[f(@*,2),[n(s,1),$(x)],$(y)],[f(@*,2),[n(s,1),$(x)],$(z)]]]],[succeeds,[n(@=<,2),$(y),$(z)]]])).
:- assert_fact(lemma,plus:injective:first,@(all,[x1,x2,y],[=>,[&,[succeeds,[n(nat,1),$(x1)]],[succeeds,[n(nat,1),$(x2)]],[succeeds,[n(nat,1),$(y)]],[=,[f(@+,2),$(x1),$(y)],[f(@+,2),$(x2),$(y)]]],[=,$(x1),$(x2)]])).

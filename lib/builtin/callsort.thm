:- assert_pred([d(total,2),$(d),$(r)],@(all,[x,y],[=>,[&,[succeeds,[n(call,2),$(d),$(x)]],[succeeds,[n(call,2),$(d),$(y)]],[gr,$(x)],[gr,$(y)]],[\/,[succeeds,[n(call,3),$(r),$(x),$(y)]],[=,$(x),$(y)],[succeeds,[n(call,3),$(r),$(y),$(x)]]]])).
:- assert_pred([d(terminating,2),$(d),$(r)],@(all,[x,y],[=>,[&,[succeeds,[n(call,2),$(d),$(x)]],[succeeds,[n(call,2),$(d),$(y)]],[gr,$(x)],[gr,$(y)]],[terminates,[n(call,3),$(r),$(x),$(y)]]])).
:- assert_fact(lemma,d_list:list,@(all,[l,d],[=>,[succeeds,[n(d_list,2),$(l),$(d)]],[succeeds,[n(list,1),$(l)]]])).
:- assert_fact(lemma,r_ordered:termination,@(all,[l,d,r],[=>,[&,[succeeds,[n(d_list,2),$(l),$(d)]],[d(terminating,2),$(d),$(r)],[gr,$(l)]],[terminates,[n(r_ordered,2),$(l),$(r)]]])).
:- assert_fact(lemma,delete:d_list,@(all,[x,l1,l2,d],[=>,[&,[succeeds,[n(delete,3),$(x),$(l1),$(l2)]],[succeeds,[n(d_list,2),$(l1),$(d)]]],[&,[succeeds,[n(call,2),$(d),$(x)]],[succeeds,[n(d_list,2),$(l2),$(d)]]]])).
:- assert_fact(lemma,permutation:d_list,@(all,[l1,l2,d],[=>,[&,[succeeds,[n(permutation,2),$(l1),$(l2)]],[succeeds,[n(d_list,2),$(l1),$(d)]]],[succeeds,[n(d_list,2),$(l2),$(d)]]])).
:- assert_fact(theorem,permutation_sort:termination,@(all,[l1,l2,d,r],[=>,[&,[succeeds,[n(d_list,2),$(l1),$(d)]],[gr,$(l1)],[d(terminating,2),$(d),$(r)]],[terminates,[n(permutation_sort,3),$(l1),$(l2),$(r)]]])).
:- assert_fact(lemma,insert:termination,@(all,[x,l1,l2,d,r],[=>,[&,[succeeds,[n(d_list,2),$(l1),$(d)]],[gr,$(l1)],[succeeds,[n(call,2),$(d),$(x)]],[gr,$(x)],[d(terminating,2),$(d),$(r)],[gr,$(r)]],[terminates,[n(insert,4),$(x),$(l1),$(l2),$(r)]]])).
:- assert_fact(lemma,insert:ground,@(all,[x,l1,l2,r],[=>,[&,[succeeds,[n(insert,4),$(x),$(l1),$(l2),$(r)]],[gr,$(x)],[gr,$(l1)]],[gr,$(l2)]])).
:- assert_fact(lemma,insert_sort:ground,@(all,[l1,l2,r],[=>,[&,[succeeds,[n(insert_sort,3),$(l1),$(l2),$(r)]],[gr,$(l1)]],[gr,$(l2)]])).
:- assert_fact(lemma,insert:d_list,@(all,[x,l1,l2,d,r],[=>,[&,[succeeds,[n(insert,4),$(x),$(l1),$(l2),$(r)]],[succeeds,[n(call,2),$(d),$(x)]],[succeeds,[n(d_list,2),$(l1),$(d)]]],[succeeds,[n(d_list,2),$(l2),$(d)]]])).
:- assert_fact(lemma,insert_sort:d_list,@(all,[l1,l2,d,r],[=>,[&,[succeeds,[n(insert_sort,3),$(l1),$(l2),$(r)]],[succeeds,[n(d_list,2),$(l1),$(d)]]],[succeeds,[n(d_list,2),$(l2),$(d)]]])).
:- assert_fact(theorem,insert_sort:termination,@(all,[l1,l2,d,r],[=>,[&,[succeeds,[n(d_list,2),$(l1),$(d)]],[gr,$(l1)],[d(terminating,2),$(d),$(r)],[gr,$(r)]],[terminates,[n(insert_sort,3),$(l1),$(l2),$(r)]]])).
:- assert_fact(lemma,insert:existence,@(all,[x,l1,d,r],[=>,[&,[succeeds,[n(d_list,2),$(l1),$(d)]],[succeeds,[n(call,2),$(d),$(x)]],[gr,$(x)],[gr,$(l1)],[d(terminating,2),$(d),$(r)]],@(ex,[l2],[succeeds,[n(insert,4),$(x),$(l1),$(l2),$(r)]])])).
:- assert_fact(theorem,insert_sort:existence,@(all,[l1,d,r],[=>,[&,[succeeds,[n(d_list,2),$(l1),$(d)]],[gr,$(l1)],[d(terminating,2),$(d),$(r)]],@(ex,[l2],[succeeds,[n(insert_sort,3),$(l1),$(l2),$(r)]])])).
:- assert_fact(lemma,insert:r_ordered,@(all,[x,l1,l2,d,r],[=>,[&,[succeeds,[n(insert,4),$(x),$(l1),$(l2),$(r)]],[succeeds,[n(call,2),$(d),$(x)]],[gr,$(x)],[succeeds,[n(d_list,2),$(l1),$(d)]],[gr,$(l1)],[succeeds,[n(r_ordered,2),$(l1),$(r)]],[d(total,2),$(d),$(r)]],[succeeds,[n(r_ordered,2),$(l2),$(r)]]])).
:- assert_fact(lemma,insert_sort:r_ordered,@(all,[l1,l2,d,r],[=>,[&,[succeeds,[n(insert_sort,3),$(l1),$(l2),$(r)]],[succeeds,[n(d_list,2),$(l1),$(d)]],[gr,$(l1)],[d(total,2),$(d),$(r)]],[succeeds,[n(r_ordered,2),$(l2),$(r)]]])).
:- assert_fact(lemma,insert:delete,@(all,[x,l1,l2,r],[=>,[succeeds,[n(insert,4),$(x),$(l1),$(l2),$(r)]],[succeeds,[n(delete,3),$(x),$(l2),$(l1)]]])).
:- assert_fact(lemma,insert_sort:permutation,@(all,[l1,l2,r],[=>,[succeeds,[n(insert_sort,3),$(l1),$(l2),$(r)]],[succeeds,[n(permutation,2),$(l1),$(l2)]]])).
:- assert_fact(theorem,insert_sort:permutation_sort,@(all,[l1,l2,d,r],[=>,[&,[succeeds,[n(d_list,2),$(l1),$(d)]],[succeeds,[n(insert_sort,3),$(l1),$(l2),$(r)]],[gr,$(l1)],[d(total,2),$(d),$(r)]],[succeeds,[n(permutation_sort,3),$(l1),$(l2),$(r)]]])).
:- assert_fact(lemma,insert:uniqueness,@(all,[x,l1,l2,l3,r],[=>,[&,[succeeds,[n(insert,4),$(x),$(l1),$(l2),$(r)]],[succeeds,[n(insert,4),$(x),$(l1),$(l3),$(r)]]],[=,$(l2),$(l3)]])).
:- assert_fact(theorem,insert_sort:uniqueness,@(all,[l1,l2,l3,r],[=>,[&,[succeeds,[n(insert_sort,3),$(l1),$(l2),$(r)]],[succeeds,[n(insert_sort,3),$(l1),$(l3),$(r)]]],[=,$(l2),$(l3)]])).
:- assert_fact(lemma,split:ground,@(all,[x,l1,l2,l3,r],[=>,[&,[succeeds,[n(split,5),$(x),$(l1),$(l2),$(l3),$(r)]],[gr,$(x)],[gr,$(l1)]],[&,[gr,$(l2)],[gr,$(l3)]]])).
:- assert_fact(lemma,split:d_list,@(all,[x,l1,l2,l3,d,r],[=>,[&,[succeeds,[n(split,5),$(x),$(l1),$(l2),$(l3),$(r)]],[succeeds,[n(d_list,2),$(l1),$(d)]]],[&,[succeeds,[n(d_list,2),$(l2),$(d)]],[succeeds,[n(d_list,2),$(l3),$(d)]]]])).
:- assert_fact(lemma,split:termination,@(all,[x,l1,l2,l3,d,r],[=>,[&,[succeeds,[n(d_list,2),$(l1),$(d)]],[gr,$(l1)],[succeeds,[n(call,2),$(d),$(x)]],[gr,$(x)],[d(terminating,2),$(d),$(r)],[gr,$(r)]],[terminates,[n(split,5),$(x),$(l1),$(l2),$(l3),$(r)]]])).
:- assert_fact(lemma,quick_sort:3:ground,@(all,[l1,l2,l3,r],[=>,[&,[succeeds,[n(quick_sort,4),$(l1),$(l2),$(l3),$(r)]],[gr,$(l1)],[gr,$(l2)]],[gr,$(l3)]])).
:- assert_fact(lemma,quick_sort:3:d_list,@(all,[l1,l2,l3,d,r],[=>,[&,[succeeds,[n(quick_sort,4),$(l1),$(l2),$(l3),$(r)]],[succeeds,[n(d_list,2),$(l1),$(d)]],[succeeds,[n(d_list,2),$(l2),$(d)]]],[succeeds,[n(d_list,2),$(l3),$(d)]]])).
:- assert_fact(lemma,split:list,@(all,[x,l1,l2,l3,r],[=>,[succeeds,[n(split,5),$(x),$(l1),$(l2),$(l3),$(r)]],[&,[succeeds,[n(list,1),$(l1)]],[succeeds,[n(list,1),$(l2)]],[succeeds,[n(list,1),$(l3)]]]])).
:- assert_fact(lemma,split:permutation,@(all,[x,l1,l2,l3,r],[=>,[succeeds,[n(split,5),$(x),$(l1),$(l2),$(l3),$(r)]],[succeeds,[n(permutation,2),[f(**,2),$(l3),$(l2)],$(l1)]]])).
:- assert_fact(lemma,split:lh,@(all,[x,l1,l2,l3,r],[=>,[succeeds,[n(split,5),$(x),$(l1),$(l2),$(l3),$(r)]],[=,[f(lh,1),$(l1)],[f(@+,2),[f(lh,1),$(l2)],[f(lh,1),$(l3)]]]])).
:- assert_fact(lemma,quick_sort:3:termination,@(all,[n,l1,l2,l3,d,r],[=>,[&,[succeeds,[n(nat,1),$(n)]],[succeeds,[n(d_list,2),$(l1),$(d)]],[succeeds,[n(d_list,2),$(l2),$(d)]],[gr,$(l1)],[gr,$(l2)],[d(terminating,2),$(d),$(r)],[gr,$(r)],[succeeds,[n(@<,2),[f(lh,1),$(l1)],$(n)]]],[terminates,[n(quick_sort,4),$(l1),$(l2),$(l3),$(r)]]])).
:- assert_fact(theorem,quick_sort:termination,@(all,[l1,l2,d,r],[=>,[&,[succeeds,[n(d_list,2),$(l1),$(d)]],[gr,$(l1)],[d(terminating,2),$(d),$(r)],[gr,$(r)]],[terminates,[n(quick_sort,3),$(l1),$(l2),$(r)]]])).
:- assert_fact(lemma,quick_sort:3:permutation,@(all,[l1,l2,l3,r],[=>,[succeeds,[n(quick_sort,4),$(l1),$(l2),$(l3),$(r)]],@(ex,[m],[&,[succeeds,[n(permutation,2),$(m),$(l1)]],[=,[f(**,2),$(m),$(l2)],$(l3)]])])).
:- assert_fact(lemma,quick_sort:permutation,@(all,[l1,l2,r],[=>,[succeeds,[n(quick_sort,3),$(l1),$(l2),$(r)]],[succeeds,[n(permutation,2),$(l1),$(l2)]]])).
:- assert_pred([d(lower_bound,3),$(x),$(l),$(r)],[\/,[=,$(l),[n([],0)]],@(ex,[y,l1],[&,[=,$(l),[n('.',2),$(y),$(l1)]],[\/,[=,$(x),$(y)],[succeeds,[n(call,3),$(r),$(x),$(y)]]]])]).
:- assert_fact(lemma,lower_bound:r_ordered,@(all,[x,l,r],[=>,[&,[d(lower_bound,3),$(x),$(l),$(r)],[succeeds,[n(r_ordered,2),$(l),$(r)]]],[succeeds,[n(r_ordered,2),[n('.',2),$(x),$(l)],$(r)]]])).
:- assert_fact(lemma,split,@(all,[x,l1,l3,l4,d,r],[=>,[&,[succeeds,[n(split,5),$(x),$(l1),$(l3),$(l4),$(r)]],[gr,$(x)],[succeeds,[n(call,2),$(d),$(x)]],[gr,$(l1)],[succeeds,[n(d_list,2),$(l1),$(d)]],[d(total,2),$(d),$(r)]],[&,@(all,[y],[=>,[succeeds,[n(member,2),$(y),$(l3)]],[succeeds,[n(call,3),$(r),$(x),$(y)]]]),@(all,[y],[=>,[succeeds,[n(member,2),$(y),$(l4)]],[\/,[=,$(y),$(x)],[succeeds,[n(call,3),$(r),$(y),$(x)]]]])]])).
:- assert_fact(lemma,split:member,@(all,[x,y,l1,l3,l4,r],[=>,[&,[succeeds,[n(split,5),$(x),$(l1),$(l3),$(l4),$(r)]],[succeeds,[n(member,2),$(y),$(l3)]]],[succeeds,[n(member,2),$(y),$(l1)]]])).
:- assert_fact(lemma,quick_sort:3:lower_bound,@(all,[x,l3,l2,l5,r],[=>,[&,[succeeds,[n(quick_sort,4),$(l3),$(l2),$(l5),$(r)]],[d(lower_bound,3),$(x),$(l2),$(r)],@(all,[y],[=>,[succeeds,[n(member,2),$(y),$(l3)]],[succeeds,[n(call,3),$(r),$(x),$(y)]]])],[d(lower_bound,3),$(x),$(l5),$(r)]])).
:- assert_fact(lemma,quick_sort:3:r_ordered,@(all,[l1,l2,l3,d,r],[=>,[&,[succeeds,[n(quick_sort,4),$(l1),$(l2),$(l3),$(r)]],[gr,$(l1)],[succeeds,[n(d_list,2),$(l1),$(d)]],[succeeds,[n(r_ordered,2),$(l2),$(r)]],[d(total,2),$(d),$(r)],@(all,[z],[=>,[succeeds,[n(member,2),$(z),$(l1)]],[d(lower_bound,3),$(z),$(l2),$(r)]])],[succeeds,[n(r_ordered,2),$(l3),$(r)]]])).
:- assert_fact(lemma,quick_sort:r_ordered,@(all,[l1,l2,d,r],[=>,[&,[succeeds,[n(quick_sort,3),$(l1),$(l2),$(r)]],[succeeds,[n(d_list,2),$(l1),$(d)]],[gr,$(l1)],[d(total,2),$(d),$(r)]],[succeeds,[n(r_ordered,2),$(l2),$(r)]]])).
:- assert_fact(theorem,quick_sort:permutation_sort,@(all,[l1,l2,d,r],[=>,[&,[succeeds,[n(quick_sort,3),$(l1),$(l2),$(r)]],[succeeds,[n(d_list,2),$(l1),$(d)]],[gr,$(l1)],[d(total,2),$(d),$(r)]],[succeeds,[n(permutation_sort,3),$(l1),$(l2),$(r)]]])).
:- assert_fact(lemma,split:uniqueness,@(all,[x,l1,l2,l3,m2,m3,r],[=>,[&,[succeeds,[n(split,5),$(x),$(l1),$(l2),$(l3),$(r)]],[succeeds,[n(split,5),$(x),$(l1),$(m2),$(m3),$(r)]]],[&,[=,$(l2),$(m2)],[=,$(l3),$(m3)]]])).
:- assert_fact(lemma,quick_sort:3:uniqueness,@(all,[l1,l2,l6,m6,r],[=>,[&,[succeeds,[n(quick_sort,4),$(l1),$(l2),$(l6),$(r)]],[succeeds,[n(quick_sort,4),$(l1),$(l2),$(m6),$(r)]]],[=,$(l6),$(m6)]])).
:- assert_fact(theorem,quick_sort:uniqueness,@(all,[l1,l2,l3,r],[=>,[&,[succeeds,[n(quick_sort,3),$(l1),$(l2),$(r)]],[succeeds,[n(quick_sort,3),$(l1),$(l3),$(r)]]],[=,$(l2),$(l3)]])).
:- assert_fact(lemma,split:existence,@(all,[x,l1,d,r],[=>,[&,[succeeds,[n(d_list,2),$(l1),$(d)]],[gr,$(l1)],[succeeds,[n(call,2),$(d),$(x)]],[gr,$(x)],[d(terminating,2),$(d),$(r)]],@(ex,[l2,l3],[succeeds,[n(split,5),$(x),$(l1),$(l2),$(l3),$(r)]])])).
:- assert_fact(lemma,quick_sort:3:existence,@(all,[n,l1,l2,d,r],[=>,[&,[succeeds,[n(nat,1),$(n)]],[succeeds,[n(d_list,2),$(l1),$(d)]],[gr,$(l1)],[d(terminating,2),$(d),$(r)],[succeeds,[n(@<,2),[f(lh,1),$(l1)],$(n)]]],@(ex,[l3],[succeeds,[n(quick_sort,4),$(l1),$(l2),$(l3),$(r)]])])).
:- assert_fact(theorem,quick_sort:existence,@(all,[l1,d,r],[=>,[&,[succeeds,[n(d_list,2),$(l1),$(d)]],[gr,$(l1)],[d(terminating,2),$(d),$(r)]],@(ex,[l2],[succeeds,[n(quick_sort,3),$(l1),$(l2),$(r)]])])).
